@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

$primary-color: #323232;
$secondary-color: #0D7377;
$text-color: #14FFEC;
$bg-color: #212121;
$menu-btn-size: 20px;
$menu-btn-line-thickness: 2px;
$nav-btn-dot-size: 5px;
$gray-950-darker: hsl(224, 71%, 3.5%);

// Global Styles
*, *:before, *:after {
    font-family: 'Poppins', system-ui, sans-serif;
    box-sizing: border-box;
    --cursor-scale: 1.0;
}

html {
    scroll-behavior: smooth;
}

.content-container {
    width: 100%;
    max-width: 120rem !important;
}

.interactable:hover {
    --cursor-scale: 10.0;
}

body {
    background: hsl(223, 71%, 5%);
    background: radial-gradient(at right top, hsl(223, 71%, 8%), hsl(223, 70%, 4%));
    background-attachment: fixed;

    overflow-x: hidden;

    &::-webkit-scrollbar {
        width: 6.5px;
    }
    &::-webkit-scrollbar-track {
        background:hsl(223, 71%, 5%);
        border-radius: 10px;
    }
    &::-webkit-scrollbar-thumb {
        background-color: hsl(223, 30%, 20%);
        border-radius: 10px;
    }
}

.top-header {
    min-height: 110px;
    transition: transform 0.2s ease-out;

    &.inactive {
        transform: translateY(-100px);
    }
}
.top-header::after {
    content: '';
    width: 100%;
    height: 3px;
    background-color: #2dd4bf;
    transform-origin: left;
    scale: 0 1;
    animation: scrollWatcher linear;
    animation-timeline: scroll();
}

.btn-slide-hover::before {
    content: '';
    background-color: white;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transform: translateX(-100%);

    transition: transform 0.15s ease-out;
}
.btn-slide-hover:hover::before {
    transform: translateX(0%);
}

svg {
    display: block;
    max-width: 100%;
    height: auto;
} 

.project-banner {

    width: 600px;

    transform: perspective(1200px) rotateY(15deg);
    border-radius: 1rem;
    box-shadow: rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;
    transition: transform 1s ease 0s;
}

.icon {
    &-btn {
        width: 24px;
        opacity: 1; 
        transform: scale(1);
        transition: all 0.3s ease;
        
        &.inactive {
            opacity: 0;
            transform: scale(0);
        }
    }
}

.social {
    &-line {
        width: 1px;
        height: 40px;
        transition: height 0.3s ease;

        &.inactive {
            height: 0px;
        }
    }
    &-arrow {
        transition: transform 0.3s ease;

        &.inactive {
            transform: rotateZ(180deg);
        }
    }
}

.back-to-top-btn {

    &.inactive {
        transform: translateY(100%);
        bottom: 0;
    }
    color: #d9d9d9;
}

::-webkit-scrollbar {
    height: 6px;
}
::-webkit-scrollbar-thumb {
    background-color: #434e64;
    border-radius: 8px;
    
}
::-webkit-scrollbar-track {
    background-color: transparent;
    box-shadow: none;
}

.skill {
    &-icon {
        transition: opacity 0.3s ease;

        &.defocus { 
            opacity: 0.5;
            filter: blur(1px);
        }
    }
    &-label {
        transition: all 0.15s ease;

        &.inactive {
            transform: translateY(-85%) scale(0.5);
            opacity: 0;
        }
    }
    &-bg {
        position: relative;
        flex-basis: 100%;
        background-color: $gray-950-darker;
        border-radius: 4px;
        transition: all 0.35s ease;

        &:hover {
            box-shadow: (0 0 4rem rgba(22, 106, 95, 0.05));
        }
        &::before {
            content: '';
            position: absolute;
            top: -1px;
            right: -1px;
            bottom: 0;
            left: -1px;
            background: linear-gradient(0deg, transparent, hsl(172, 66%, 25%));
    
            z-index: -1;
            border-radius: 4px;
        }
    }
}
.navigation-btn {

    position: relative;

    &.active {
        color: white;
    }

    $size: $nav-btn-dot-size;

    &::before {
        content: '';
        background-color: #2dd4bf;
        width: $size;
        height: $size;
        border-radius: 100%;
        position: absolute;
        top: 50%;
        left: calc(50% - $size / 2);
        opacity: 0;
        z-index: -1;

        transition: all 0.3s ease;
    }
    &.active::before {
        top: 100%;
        opacity: 1;
    }
}

.pale-light-blue {
    &-text {
        color: #eff8ff;
    }
    &-bg {
        background-color: #eff8ff;
    }
}
.bg-dark-950-darker {
    background-color: $gray-950-darker;
}

/*    MENU BUTTON :: START    */

@mixin MenuLine($size, $thickness) {
    width: $size;
    height: $thickness;
    background-color: #2dd4bf;
    border-radius: 16px;
    transition: transform 0.3s ease;
}
@mixin CalculateMenuOffset($size, $thickness) {
    --offset: calc(#{$size} / 2 - #{$thickness} / 2);
}

@mixin MenuBtnBase($size, $thickness, $topSizeMultiplier: 1.0, $middleSizeMultiplier: 1.0, $bottomSizeMultiplier: 1.0) {
    width: $size;
    height: $size;

    @include CalculateMenuOffset($size, $thickness);

    .menu-line {
        &-top { @include MenuLine($size * $topSizeMultiplier, $thickness); }
        &-middle { @include MenuLine($size * $middleSizeMultiplier, $thickness); }
        &-bottom { @include MenuLine($size * $bottomSizeMultiplier, $thickness); }
    }
}

.menu-btn {
    
    @include MenuBtnBase($menu-btn-size, $menu-btn-line-thickness);

    &.list { 
        @include MenuBtnBase($menu-btn-size, $menu-btn-line-thickness, 0.7, 1.0, 0.8);
    }
    &-big {
        @include MenuBtnBase(30px, 3px);
    }
    &.close {
        .menu-line {
            &-top {
                transform: translateY(var(--offset)) rotateZ(45deg);
            }
            &-middle {
                opacity: 0;
            }
            &-bottom {
                transform: translateY(calc(-1 * var(--offset))) rotateZ(-45deg);
            }
        }
    }
}

/*    MENU BUTTON :: END    */


/*    ANIMATIONS :: START    */

@mixin keyframes($name, $frames) {
  @keyframes #{$name} {
    @each $percent, $style in $frames {
      #{$percent + '%'} { 
        @each $prop, $value in $style { 
          #{$prop}: #{$value}; 
        }
      }
    }
  }
}
@include keyframes(fadeIn, (
    0: (opacity: 0),
    100: (opacity: 1)
));
@include keyframes(instantFadeIn, (
    0: (opacity: 0),
    100: (opacity: 1)
));
@include keyframes(scrollWatcher, (
    100: (scale: 1 1)
));

@mixin fadeAnimation($opacity, $animName, $speed) {
    opacity: $opacity;
    animation: $animName $speed forwards ease;
}

.fade-in { @include fadeAnimation(0, fadeIn, 0.3s) }
.instant-fade-in { @include fadeAnimation(0, instantFadeIn, 0s) }

/*    ANIMATIONS :: END    */